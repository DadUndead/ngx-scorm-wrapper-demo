{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/lms.service.ts","webpack:///./src/app/timeConverter.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n</div>\\n<article style=\\\"text-align:center\\\">\\n  <p>\\n    SCORM API version: {{apiVersion}}\\n  </p>\\n  <p>\\n    Press the buttons to change your score. The score will be send to the LMS, if it is connected and SCORM_API is\\n    found.\\n  </p>\\n\\n  <button (click)=\\\"changeScore(score-1)\\\">-</button>\\n  {{score}}\\n  <button (click)=\\\"changeScore(score+1)\\\">+</button>\\n  <hr>\\n  <div style=\\\"text-align:center\\\">\\n    <button (click)=\\\"submitScore()\\\">Save</button>\\n  </div>\\n</article>\\n\\n\"","import { Component } from '@angular/core';\nimport { LmsService } from './lms.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  public title = 'ngx-scorm-wrapper-demo';\n  public score = 0;\n  public readonly maxScore = 100;\n  public readonly minScore = 0;\n  public readonly apiVersion: string = 'not found';\n\n  constructor(private lmsService: LmsService) {\n    this.apiVersion = lmsService.apiVersion;\n    this.score = lmsService.score;\n  }\n\n  public changeScore(score: number) {\n    if (score >= this.minScore && score <= this.maxScore) {\n      this.score = score;\n      this.lmsService.score = this.score;\n    } else {\n      this.score = score < this.minScore ? this.minScore : this.maxScore;\n    }\n  }\n\n  public submitScore() {\n    this.lmsService.commit(); // Finally saves data to LMS\n    this.lmsService.terminate();\n    window.close();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ScormWrapperModule } from 'ngx-scorm-wrapper';\n\nimport { AppComponent } from './app.component';\nimport { LmsService } from './lms.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ScormWrapperModule,\n  ],\n  providers: [\n    LmsService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { ScormWrapperService } from 'ngx-scorm-wrapper';\r\nimport convertTotalSeconds from './timeConverter';\r\n\r\nexport interface ILMSData {\r\n  score: number;\r\n  location: string;\r\n  completionStatus: 'complete' | 'incomplete';\r\n  suspendData: object;\r\n}\r\n\r\n@Injectable()\r\nexport class LmsService {\r\n\r\n  private readonly startTime: number;\r\n\r\n  constructor(private scormWrapper: ScormWrapperService) {\r\n\r\n    try {\r\n      this.scormWrapper.doLMSInitialize(); // Try to find SCORM_API and initialize it\r\n    } catch (err) {\r\n      console.log('Cannot find LMS API');\r\n    }\r\n\r\n    if (!scormWrapper.LMSIsInitialized) {\r\n      console.warn('LMS is not connected');\r\n      return;\r\n    } else {\r\n      console.warn('LMS is connected');\r\n      this.startTime = new Date().getTime();\r\n\r\n      this.scormWrapper.doLMSSetValue('cmi.score.max', '100');\r\n      this.scormWrapper.doLMSSetValue('cmi.location', '0:0'); // assume that the format is <chapter>:<page>\r\n      this.scormWrapper.doLMSSetValue('cmi.session_time', this.sessionTime);\r\n      this.scormWrapper.doLMSSetValue('cmi.completion_status', 'incomplete');\r\n      this.commit();\r\n    }\r\n  }\r\n\r\n  get apiVersion(): string {\r\n    return this.scormWrapper.APIVersion;\r\n  }\r\n\r\n  get sessionTime(): string {\r\n    if (this.startTime) {\r\n      const currentTime = new Date().getTime();\r\n      return convertTotalSeconds((currentTime - this.startTime) / 1000);\r\n    }\r\n    return '00:00:00.0';\r\n  }\r\n\r\n  get score(): number {\r\n    if (this.scormWrapper.LMSIsInitialized) {\r\n      const scaledScore = +this.scormWrapper.doLMSGetValue('cmi.score.scaled') || 0;\r\n      const rawScore = +this.scormWrapper.doLMSGetValue('cmi.score.raw') || 0;\r\n\r\n      return scaledScore * 100 || rawScore;\r\n    }\r\n\r\n    console.warn('LMS is not connected');\r\n    return 0;\r\n  }\r\n\r\n  set score(score: number) {\r\n    if (this.scormWrapper.LMSIsInitialized) {\r\n      this.scormWrapper.doLMSSetValue('cmi.score.scaled', '' + score / 100);\r\n      return;\r\n    }\r\n    console.warn('LMS is not connected');\r\n  }\r\n\r\n  public commit() {\r\n    this.scormWrapper.doLMSCommit();\r\n  }\r\n\r\n  public terminate() {\r\n    this.scormWrapper.doLMSFinish();\r\n  }\r\n\r\n  public getSuspendData(): any {\r\n    if (!this.scormWrapper.LMSIsInitialized) {\r\n      console.warn('LMS is not connected');\r\n      return null;\r\n    }\r\n\r\n    const suspendData = this.scormWrapper.doLMSGetValue('cmi.suspend_data');\r\n    if (suspendData) {\r\n      return JSON.parse(suspendData as string);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n\r\n  public sendData(data: ILMSData): void {\r\n    if (!this.scormWrapper.LMSIsInitialized) {\r\n      console.warn('LMS is not connected');\r\n      return null;\r\n    }\r\n\r\n    const { score, location, completionStatus, suspendData } = data;\r\n\r\n    this.scormWrapper.doLMSSetValue('cmi.score.max', '100');\r\n    this.scormWrapper.doLMSSetValue('cmi.location', location); // assume that the format is <chapter>:<page>\r\n    this.scormWrapper.doLMSSetValue('cmi.session_time', this.sessionTime);\r\n    this.scormWrapper.doLMSSetValue('cmi.completion_status', completionStatus);\r\n    this.scormWrapper.doLMSSetValue('cmi.score.scaled', score / 100 + '');\r\n    this.scormWrapper.doLMSSetValue('cmi.core.lesson_location', location);\r\n    this.scormWrapper.doLMSSetValue('cmi.suspend_data', JSON.stringify(suspendData));\r\n    this.commit();\r\n  }\r\n\r\n  public getData(): any {\r\n    if (!this.scormWrapper.LMSIsInitialized) {\r\n      console.warn('LMS is not connected');\r\n      return null;\r\n    }\r\n\r\n    const suspendData = this.scormWrapper.doLMSGetValue('cmi.suspend_data');\r\n    if (suspendData) {\r\n      return JSON.parse(suspendData as string);\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","/*******************************************************************************\r\n ** this function will convert seconds into hours, minutes, and seconds in\r\n ** CMITimespan type format - HHHH:MM:SS.SS (Hours has a max of 4 digits &\r\n ** Min of 2 digits\r\n *******************************************************************************/\r\nconst convertTotalSeconds = (totalSeconds): string => {\r\n  let sec = (totalSeconds % 60);\r\n\r\n  totalSeconds -= sec;\r\n  const tmp = (totalSeconds % 3600);  // of seconds in the total # of minutes\r\n  totalSeconds -= tmp;                // of seconds in the total # of hours\r\n\r\n  // convert seconds to conform to CMITimespan type (e.g. SS.00)\r\n  sec = Math.round(sec * 100) / 100;\r\n\r\n  let strSec = sec.toString();\r\n  let strWholeSec = strSec;\r\n  let strFractionSec = '';\r\n\r\n  if (strSec.indexOf('.') !== -1) {\r\n    strWholeSec = strSec.substring(0, strSec.indexOf('.'));\r\n    strFractionSec = strSec.substring(strSec.indexOf('.') + 1, strSec.length);\r\n  }\r\n\r\n  if (strWholeSec.length < 2) {\r\n    strWholeSec = '0' + strWholeSec;\r\n  }\r\n  strSec = strWholeSec;\r\n\r\n  if (strFractionSec.length) {\r\n    strSec = strSec + '.' + strFractionSec;\r\n  }\r\n\r\n  let hour: number;\r\n  let min: number;\r\n\r\n  if ((totalSeconds % 3600) !== 0) {\r\n    hour = 0;\r\n  } else {\r\n    hour = (totalSeconds / 3600);\r\n  }\r\n  if ((tmp % 60) !== 0) {\r\n    min = 0;\r\n  } else {\r\n    min = (tmp / 60);\r\n  }\r\n\r\n  const strHour = (hour.toString().length < 2) ? `0${hour}` : hour;\r\n  const strMin = (min.toString().length < 2) ? `0${min}` : min;\r\n\r\n  return `${strHour}:${strMin}:${strSec}`;\r\n};\r\n\r\nexport default convertTotalSeconds;\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}